version: '3'
services:

  #PHP Service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: digitalocean.com/php
    container_name: app
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
      ZEND_EXTENSION: ${ZEND_EXTENSION}
      XDEBUG_REMOTE_ENABLE: ${XDEBUG_REMOTE_ENABLE}
      XDEBUG_REMOTE_AUTOSTART: ${XDEBUG_REMOTE_AUTOSTART}
      XDEBUG_REMOTE_HOST: ${XDEBUG_REMOTE_HOST}
      XDEBUG_REMOTE_PORT: ${XDEBUG_REMOTE_PORT}
      XDEBUG_IDEKEY: ${XDEBUG_IDEKEY}
      XDEBUG_REMOTE_CONNECT_BACK: ${XDEBUG_REMOTE_CONNECT_BACK}
      XDEBUG_REMOTE_HANDLER: ${XDEBUG_REMOTE_HANDLER}
      XDEBUG_REMOTE_MODE: ${XDEBUG_REMOTE_MODE}
      XDEBUG_REMOTE_LOG: ${XDEBUG_REMOTE_LOG}
      XDEBUG_MAX_NESTING_LEVEL: ${XDEBUG_MAX_NESTING_LEVEL}
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - app-network

  #Nginx Service
  webserver:
    image: nginx:alpine
    container_name: webserver
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/var/www
      - ./nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - app-network

  #MySQL Service
  database:
    image: mysql:5.7.22
    container_name: database
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: laravel
      MYSQL_ROOT_PASSWORD: root
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - dbdata:/var/lib/mysql/
      - ./mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - app-network

  #Redis Service
  redis:
    image: redis:6.0.5-alpine
    container_name: redis
    restart: unless-stopped
    tty: true
    ports:
      - "6379:6379"
    environment:
      SERVICE_NAME: redis
      SERVICE_TAGS: dev
      REDIS_HOST: redis
      REDIS_PASSWORD: redis
    command: 'redis-server --appendonly yes --requirepass "${REDIS_PASSWORD}"'
    volumes:
      - redis:/data
      - ./redis/redis.conf:/etc/redis/redis.conf
    networks:
      - app-network

#Docker Networks
networks:
  app-network:
    driver: bridge
#Volumes
volumes:
  dbdata:
    driver: local
  redis:
